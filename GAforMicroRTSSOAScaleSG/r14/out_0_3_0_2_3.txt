Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Ranged;Up;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Random;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Base;Up;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Idle;S;For_S;S;For_S;S;C;Build;Base;Up;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Harvest;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;4;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;Farthest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Left;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Build;Light;Right;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Up;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Harvest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;Up;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Up;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;S;C;Train;Light;EnemyDir;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Up;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Train;Worker;Left;S;S_S;S;C;Attack;Closest;S;C;Attack;Random;S;S_S;S;C;Attack;MostHealthy;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;C;Train;Heavy;Right;S;C;Harvest;S;For_S;S;C;Idle;S;C;Attack;Closest



for(Unit u){
	for(Unit u){
		u.train(Worker,EnemyDir)
		u.harvest()
		for(Unit u){
			u.idle()
		}
		u.attack(Closest)
	}
}
FIM
