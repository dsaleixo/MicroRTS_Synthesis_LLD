Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Strongest;S;C;Idle
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Heavy;Up;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Heavy;Right;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Base;Up;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Harvest;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Heavy;Down
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Train;Worker;EnemyDir



for(Unit u){
	u.attack(LessHealthy)
	if(u.HasUnitThatKillsInOneAttack()) then {
		for(Unit u){
			if(u.HasUnitWithinDistanceFromOpponent(5)) then {
				for(Unit u){
					u.attack(LessHealthy)
				}
			}
			u.harvest()
			u.train(Worker,EnemyDir)
		}
	}
}
FIM
