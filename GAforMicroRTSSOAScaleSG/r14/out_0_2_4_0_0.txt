Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Build;Base;Down;S;C;Build;Base;EnemyDir;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;1;S;C;Train;Worker;Right;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;50;S;C;Train;Base;EnemyDir;S;C;Harvest
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Weakest;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Barracks;EnemyDir;S;C;Attack;Random;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Base;Left;S;S_S;S;C;Train;Ranged;Right;S;C;Build;Barracks;EnemyDir;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Weakest;S;C;Harvest;S;S_S;S;C;Attack;Random;S;For_S;S;C;Train;Worker;Left;S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;Build;Light;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Train;Ranged;Right;S;C;Build;Barracks;EnemyDir;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;C;Harvest;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;Empty;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;3;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Train;Worker;Down;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Harvest
Atual=S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Train;Worker;Down;S;For_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy



for(Unit u){
	for(Unit u){
		if(u.HasUnitWithinDistanceFromOpponent(1)) then {
			for(Unit u){
				u.train(Worker,Down)
			}
			for(Unit u){
				for(Unit u){
					u.attack(Weakest)
				}
			}
		} else {
			u.moveToUnit(Enemy,LessHealthy)
		}
	}
}
FIM
