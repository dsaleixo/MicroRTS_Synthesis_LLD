Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;Right;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Build;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Build;Heavy;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Build;Ranged;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Build;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;2;S;C;Build;Heavy;EnemyDir;S;C;Attack;Weakest;S;For_S;S;For_S;S;For_S;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;C;Attack;Weakest;S;For_S;S;For_S;S;For_S;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveAway;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Base;Right;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Ranged;EnemyDir;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Light;Right;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Base;Up;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;S;C;Train;Worker;Right;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;C;Harvest;S;C;Train;Base;Up;S;C;Train;Worker;Left



for(Unit u){
	for(Unit u){
		if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
			u.attack(Weakest)
		} else {
			for(Unit u){
				for(Unit u){
					if(u.canAttack()) then {
						if(HasNumberOfWorkersHarvesting(3)) then {
							e
						} else {
							u.harvest()
						}
					} else {
						e
					}
				}
			}
		}
	}
	u.train(Worker,Left)
}
FIM
