Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Train;Base;Right;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Light;Right
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Barracks;Right;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;C;Attack;Closest;S;Empty;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Right;S;C;MoveToUnit;Enemy;Random;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Right;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Worker;Up;S;For_S;S;C;Harvest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Heavy;Up;S;C;Train;Worker;Left;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Left;S;C;Idle;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Right;S;Empty;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Up;S;Empty;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Down;S;Empty;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;EnemyDir;S;Empty;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Train;Worker;EnemyDir;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Harvest;S;C;MoveAway
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Train;Worker;EnemyDir;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Harvest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Train;Worker;Up;S;Empty;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasLessNumberOfUnits;Light;4;S;Empty
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;S;Empty;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;S;Empty;S;For_S;S;C;Attack;Farthest



for(Unit u){
	if(u.HasUnitWithinDistanceFromOpponent(25)) then {
		for(Unit u){
			for(Unit u){
				u.train(Worker,Up)
				for(Unit u){
					u.idle()
				}
				for(Unit u){
					u.harvest()
				}
			}
		}
	} else {
		e
	}
	for(Unit u){
		u.attack(Farthest)
	}
}
FIM
