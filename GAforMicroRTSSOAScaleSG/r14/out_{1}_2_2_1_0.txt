Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Heavy;Down;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;MoveAway
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;MoveToUnit;Ally;LessHealthy



for(Unit u){
	for(Unit u){
		if(u.HasUnitWithinDistanceFromOpponent(5)) then {
			u.attack(LessHealthy)
		} else {
			for(Unit u){
				u.train(Worker,Left)
				for(Unit u){
					u.idle()
				}
			}
		}
	}
	u.harvest()
	u.moveToUnit(Ally,LessHealthy)
}
FIM
