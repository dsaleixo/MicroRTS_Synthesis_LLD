Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;EnemyDir;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Worker;Right;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Train;Heavy;Right;S;C;Build;Barracks;Up;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveAway;S;C;Harvest;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Light;Left;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Weakest;S;C;Harvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Light;Left;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;Build;Light;Left;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;C;Train;Base;EnemyDir;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;Build;Worker;Down;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;Build;Ranged;Right;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;LessHealthy;S;C;Train;Ranged;Up;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Random;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up



for(Unit u){
	if(u.canHarvest()) then {
		if(u.OpponentHasUnitInPlayerRange()) then {
			for(Unit u){
				u.attack(Strongest)
			}
		}
	} else {
		for(Unit u){
			u.idle()
		}
	}
	if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
		u.moveToUnit(Enemy,Random)
	} else {
		for(Unit u){
			u.harvest()
			u.train(Worker,Up)
		}
	}
}
FIM
