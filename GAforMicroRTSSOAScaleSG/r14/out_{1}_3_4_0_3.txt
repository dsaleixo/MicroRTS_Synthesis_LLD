Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;For_S;S;S_S;S;C;Build;Worker;Up;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Idle;S;S_S;S;C;MoveAway;S;C;Idle;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;For_S;S;S_S;S;C;Build;Worker;Up;S;C;Train;Worker;Down;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Barracks;Left;S;C;Train;Heavy;Up;S;C;Build;Barracks;EnemyDir;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Weakest;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		if(HasNumberOfUnits(Worker,2)) then {
			for(Unit u){
				u.idle()
				u.harvest()
				for(Unit u){
					u.train(Heavy,Up)
					u.build(Barracks,EnemyDir)
				}
			}
		}
		u.attack(Weakest)
	}
	u.train(Worker,Up)
}
FIM
