Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Strongest;S;S_S;S;C;Train;Barracks;Right;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;Strongest;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;C;Build;Base;Down;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;C;Build;Base;Down;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;For_S;S;C;Build;Base;Down;S;C;Train;Worker;Left



for(Unit u){
	u.idle()
	if(HasNumberOfWorkersHarvesting(3)) then {
		for(Unit u){
			u.attack(Strongest)
		}
	} else {
		u.harvest()
	}
	for(Unit u){
		for(Unit u){
			u.build(Base,Down)
		}
	}
	u.train(Worker,Left)
}
FIM
