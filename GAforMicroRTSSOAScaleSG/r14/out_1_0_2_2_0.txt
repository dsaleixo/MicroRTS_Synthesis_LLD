Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Idle;S;C;Harvest;S;For_S;S;C;Train;Barracks;Down;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir



for(Unit u){
	u.idle()
	u.idle()
	u.harvest()
	for(Unit u){
		u.train(Barracks,Down)
	}
	if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
		for(Unit u){
			for(Unit u){
				u.attack(Strongest)
			}
			u.train(Worker,EnemyDir)
		}
	}
}
FIM
