Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;S_S;S;C;Idle;S;C;Idle;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Ranged;Right;S;C;Build;Barracks;Right;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;C;Attack;Weakest



for(Unit u){
	if(HasNumberOfWorkersHarvesting(3)) then {
		for(Unit u){
			for(Unit u){
				u.train(Ranged,Right)
				u.build(Barracks,Right)
			}
		}
		u.idle()
	} else {
		for(Unit u){
			u.train(Worker,EnemyDir)
		}
		u.harvest()
	}
	u.attack(Weakest)
}
FIM
