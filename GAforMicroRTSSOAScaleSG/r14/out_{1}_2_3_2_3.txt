Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;Build;Ranged;Right;S;C;Build;Heavy;Up;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Build;Ranged;Right;S;C;MoveAway;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;Train;Ranged;Down;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down



for(Unit u){
	for(Unit u){
		for(Unit u){
			for(Unit u){
				u.idle()
			}
		}
	}
	for(Unit u){
		u.harvest()
	}
	u.moveToUnit(Enemy,Weakest)
	u.train(Worker,Down)
}
FIM
