Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;C;Build;Light;EnemyDir;S;C;Train;Worker;Down;S;C;Build;Worker;Right
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;5;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Random;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;50;S;C;MoveAway
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Base;Left;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Harvest;S;Empty
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Ally;Closest;S;Empty
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Ally;Closest;S;Empty
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Farthest;S;Empty
Atual=S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;1;S;C;Attack;Closest;S;C;Build;Base;Right
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;Harvest;S;C;Train;Light;Down;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;C;Attack;Closest;S;C;Train;Worker;Right;S;For_S;S;C;Train;Worker;EnemyDir



for(Unit u){
	for(Unit u){
		for(Unit u){
			if(HaveQtdUnitsAttacking(1)) then {
				u.harvest()
			}
			u.idle()
		}
		if(u.canHarvest()) then {
			u.attack(Closest)
		} else {
			for(Unit u){
				u.train(Worker,EnemyDir)
			}
		}
	}
}
FIM
