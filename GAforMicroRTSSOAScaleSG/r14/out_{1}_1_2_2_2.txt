Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		for(Unit u){
			u.harvest()
		}
	} else {
		for(Unit u){
			u.train(Worker,Up)
		}
		u.attack(Closest)
	}
}
FIM
