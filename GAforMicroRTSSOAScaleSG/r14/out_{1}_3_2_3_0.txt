Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;S;S_S;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up;S;S_S;S;Empty;S;Empty
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Harvest;S;For_S;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;S;S_S;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Closest;S;S_S;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;S;C;Idle;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Idle;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;MoveToUnit;Ally;Random;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Idle;S;C;Attack;MostHealthy



for(Unit u){
	if(HasLessNumberOfUnits(Worker,3)) then {
		u.moveToUnit(Ally,Random)
	}
	if(HaveQtdUnitsAttacking(3)) then {
		u.harvest()
	}
	for(Unit u){
		u.train(Worker,Up)
	}
	u.idle()
	u.attack(MostHealthy)
}
FIM
