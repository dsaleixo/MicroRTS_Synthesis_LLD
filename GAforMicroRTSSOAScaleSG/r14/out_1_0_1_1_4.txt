Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;10;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Train;Worker;Down;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;C;Build;Base;EnemyDir;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Train;Worker;Left;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;50;S;C;Build;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Train;Worker;Left;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Heavy;Right;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Light;EnemyDir;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Light;EnemyDir;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Heavy;EnemyDir;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Ranged;Down;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;S;C;Attack;Closest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;Random



for(Unit u){
	if(HaveQtdUnitsAttacking(1)) then {
		u.moveAway()
		u.moveToUnit(Enemy,Strongest)
	} else {
		if(u.isBuilder()) then {
			u.harvest()
			u.attack(Closest)
			for(Unit u){
				u.attack(Weakest)
			}
		}
		u.train(Worker,Left)
	}
	if(u.is(Heavy)) then {
		for(Unit u){
			u.attack(Random)
		}
	}
}
FIM
