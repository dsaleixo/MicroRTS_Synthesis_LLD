Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;Harvest;S;C;Attack;Weakest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Build;Barracks;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;S_S;S;S_S;S;C;Attack;Random;S;C;Build;Heavy;Right;S;For_S;S;For_S;S;C;Idle;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Attack;Random;S;For_S;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Attack;Random;S;For_S;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Train;Heavy;Left;S;S_S;S;C;Attack;Random;S;For_S;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Attack;Random;S;For_S;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Attack;Closest;S;For_S;S;Empty
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Closest;S;C;Attack;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random;S;C;Attack;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random;S;C;Attack;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;1;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Build;Worker;Left;S;C;Build;Base;Down;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Harvest;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;25;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Build;Ranged;Right;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;25;S;C;MoveToUnit;Enemy;Random;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;25;S;C;MoveToUnit;Enemy;Random;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;S;C;Build;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;25;S;C;MoveToUnit;Enemy;Random;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir



for(Unit u){
	for(Unit u){
		u.harvest()
		if(u.isBuilder()) then {
			for(Unit u){
				if(HasNumberOfUnits(Light,25)) then {
					u.moveToUnit(Enemy,Random)
				} else {
					for(Unit u){
						u.attack(LessHealthy)
					}
				}
			}
		} else {
			u.train(Worker,EnemyDir)
		}
	}
}
FIM
