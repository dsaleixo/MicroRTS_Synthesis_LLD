Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Up;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Up;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Train;Light;Down;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;For_S;S;C;Build;Heavy;EnemyDir;S;For_S;S;C;Idle;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Harvest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;For_S;S;C;Idle;S;For_S;S;Empty;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;C;Train;Worker;Up;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Up;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;C;Build;Light;Down;S;Empty
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Up;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;Empty;S;Empty
Atual=S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Build;Light;Up;S;C;Attack;Farthest;S;C;Build;Worker;Down;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;Empty;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Random;S;S_S;S;C;Idle;S;C;Harvest;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;C;Idle;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Train;Ranged;Left;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Strongest



for(Unit u){
	u.idle()
	u.harvest()
	if(u.canHarvest()) then {
		for(Unit u){
			u.moveToUnit(Enemy,Strongest)
		}
	} else {
		u.train(Worker,Up)
	}
	u.moveToUnit(Enemy,Strongest)
}
FIM
