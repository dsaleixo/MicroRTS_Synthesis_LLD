Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Barracks;Right;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Idle;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;Attack;Strongest;S;C;Harvest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;Attack;Strongest;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;For_S;S;C;Train;Worker;Left;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Idle;S;C;Train;Barracks;EnemyDir;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;C;Build;Base;Left;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Random



for(Unit u){
	if(HasNumberOfWorkersHarvesting(2)) then {
		if(u.HasUnitWithinDistanceFromOpponent(3)) then {
			u.attack(Weakest)
		} else {
			u.moveToUnit(Enemy,Weakest)
		}
	} else {
		u.harvest()
	}
	u.train(Worker,Left)
	u.attack(Random)
}
FIM
