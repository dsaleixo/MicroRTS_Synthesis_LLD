Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Harvest;S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Train;Worker;Up;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Train;Light;Up;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;S;C;Build;Light;Left;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;3;S;C;Harvest;S;C;Train;Worker;Up;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;For_S;S;C;Attack;LessHealthy



for(Unit u){
	if(u.canAttack()) then {
		u.harvest()
		u.build(Light,Left)
	} else {
		if(HasNumberOfUnits(Heavy,3)) then {
			u.harvest()
		} else {
			u.train(Worker,Up)
		}
	}
	if(u.canHarvest()) then {
		u.moveAway()
		for(Unit u){
			u.attack(LessHealthy)
		}
	}
}
FIM
