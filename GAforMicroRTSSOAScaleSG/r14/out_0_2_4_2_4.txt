Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Build;Base;Right
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Ranged;S;S_S;S;C;Build;Base;EnemyDir;S;C;Harvest;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Ranged;S;C;Train;Base;Up;S;C;Build;Worker;Up;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Up;S;C;Build;Ranged;Left;S;C;Harvest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;If_B_then_S;B;HasNumberOfUnits;Heavy;5;S;C;Train;Ranged;EnemyDir;S;S_S;S;C;Train;Ranged;Left;S;S_S;S;C;Build;Base;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;S;C;Harvest;S;S_S;S;C;Train;Ranged;Left;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Down;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;IsBuilder;S;Empty;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;LessHealthy



for(Unit u){
	if(u.canAttack()) then {
		for(Unit u){
			if(u.HasUnitThatKillsInOneAttack()) then {
				for(Unit u){
					for(Unit u){
						u.idle()
						u.build(Barracks,Left)
						u.harvest()
						u.attack(LessHealthy)
					}
				}
			} else {
				u.attack(LessHealthy)
			}
		}
	} else {
		for(Unit u){
			u.train(Light,Down)
		}
		u.moveToUnit(Ally,LessHealthy)
	}
}
FIM
