Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;10;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;Attack;Random;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;C;MoveToUnit;Ally;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Random;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;S;C;Idle
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Train;Light;Right;S;C;Harvest



for(Unit u){
	u.attack(LessHealthy)
	u.train(Worker,EnemyDir)
	for(Unit u){
		if(HaveQtdUnitsAttacking(3)) then {
			u.harvest()
		}
	}
}
FIM
