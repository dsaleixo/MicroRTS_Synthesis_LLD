Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Random;S;C;Attack;MostHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest



for(Unit u){
	for(Unit u){
		for(Unit u){
			u.idle()
		}
	}
	u.harvest()
	u.train(Worker,Left)
	u.attack(Strongest)
}
FIM
