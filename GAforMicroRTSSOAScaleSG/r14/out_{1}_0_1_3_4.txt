Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Harvest;S;C;MoveAway
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;C;Harvest;S;For_S;S;C;Build;Barracks;Down;S;C;Attack;LessHealthy;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S;B;CanHarvest;S;C;Harvest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;5;S;C;Harvest;S;C;Build;Barracks;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S;B;CanAttack;S;C;Harvest;S;For_S;S;C;Build;Barracks;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;For_S;S;C;Build;Barracks;Right;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;4;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;For_S;S;C;Build;Barracks;Right;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S;B;CanHarvest;S;C;Harvest;S;For_S;S;C;Build;Barracks;Up;S;C;Attack;Strongest



for(Unit u){
	for(Unit u){
		u.train(Light,Right)
		if(u.canHarvest()) then {
			u.harvest()
		}
		for(Unit u){
			u.build(Barracks,Up)
		}
	}
	u.attack(Strongest)
}
FIM
