Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;50;S;C;Train;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Heavy;Up;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Light;Right;S;Empty;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Light;Right;S;Empty;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Right;S;C;Train;Ranged;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;C;Build;Barracks;Right;S;C;Train;Ranged;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;S_S;S;C;Idle;S;C;Build;Heavy;Right;S;C;Build;Barracks;EnemyDir;S;C;Train;Ranged;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;S_S;S;C;Idle;S;C;Build;Heavy;Right;S;Empty;S;Empty;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;S;Empty;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Ranged;Left;S;C;Harvest;S;C;Attack;LessHealthy



for(Unit u){
	u.train(Worker,Left)
	if(HasNumberOfWorkersHarvesting(1)) then {
		e
	} else {
		u.harvest()
	}
	u.attack(LessHealthy)
}
FIM
