Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Build;Heavy;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Build;Light;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Build;Worker;Left;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Attack;Random;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;C;Idle;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Idle;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Build;Light;Up;S;C;Build;Ranged;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;4;S;S_S;S;C;Harvest;S;C;Train;Base;Down;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;For_S;S;C;Idle;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;S_S;S;S_S;S;Empty;S;Empty;S;C;Build;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Build;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Attack;Random;S;For_S;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Worker;EnemyDir;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;For_S;S;C;Build;Worker;Down;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Build;Worker;EnemyDir;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Harvest;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Attack;Closest



for(Unit u){
	u.train(Worker,EnemyDir)
	u.harvest()
	if(u.isBuilder()) then {
		for(Unit u){
			for(Unit u){
				u.attack(Closest)
			}
		}
	}
}
FIM
