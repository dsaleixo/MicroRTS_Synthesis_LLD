Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;For_S;S;C;Build;Base;Down;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;LessHealthy;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Harvest
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;C;Train;Worker;Down;S;C;Harvest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;Up
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Ranged;EnemyDir;S;Empty;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;S;S_S;S;C;Build;Ranged;Left;S;C;Attack;Farthest;S;C;Harvest;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Light;Right;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Heavy;EnemyDir;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Ranged;Left;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Light;EnemyDir;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Heavy;EnemyDir;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Ranged;Left;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Light;EnemyDir;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Light;EnemyDir;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;Closest



for(Unit u){
	if(u.canHarvest()) then {
		for(Unit u){
			u.build(Barracks,Down)
			u.train(Light,Left)
		}
		u.harvest()
	}
	u.attack(Closest)
}
FIM
