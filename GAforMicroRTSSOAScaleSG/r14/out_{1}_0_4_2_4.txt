Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Barracks;EnemyDir;S;C;Build;Heavy;Left;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveAway;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;Harvest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;Harvest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;S;C;Train;Ranged;EnemyDir;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Down;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Down;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Down;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Build;Worker;Up;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Build;Worker;Up;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Down;S;C;Harvest;S;C;Idle;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Build;Worker;Up;S;S_S;S;C;Train;Light;Up;S;S_S;S;For_S;S;C;Build;Barracks;Down;S;C;Harvest;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Attack;Weakest
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException
FIM
