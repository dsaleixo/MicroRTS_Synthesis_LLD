Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Base;Up;S;S_S;S;C;Harvest;S;C;Build;Worker;Left;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Build;Base;Up;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;LessHealthy;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Train;Ranged;EnemyDir;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Left;S;S_S;S;C;Train;Ranged;Left;S;C;Attack;LessHealthy;S;C;Harvest



for(Unit u){
	u.train(Worker,Left)
	if(HasNumberOfWorkersHarvesting(2)) then {
		if(u.HasUnitInOpponentRange()) then {
			u.attack(Closest)
		} else {
			for(Unit u){
				u.build(Barracks,Left)
			}
			u.train(Ranged,Left)
			u.attack(LessHealthy)
		}
	} else {
		u.harvest()
	}
}
FIM
