Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;MoveAway;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Barracks;Left;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Closest



for(Unit u){
	u.train(Worker,Up)
	if(u.OpponentHasUnitInPlayerRange()) then {
		for(Unit u){
			u.idle()
		}
	} else {
		if(HaveQtdUnitsAttacking(3)) then {
			u.harvest()
		}
	}
	u.attack(Closest)
}
FIM
