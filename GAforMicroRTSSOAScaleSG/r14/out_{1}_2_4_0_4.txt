Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Build;Worker;Right;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Ranged;Down;S;C;Build;Worker;Right;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Ranged;Down;S;C;Build;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Base;Up;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;3;S;Empty;S;C;Attack;LessHealthy;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy



for(Unit u){
	for(Unit u){
		if(HaveQtdUnitsAttacking(3)) then {
			if(u.OpponentHasUnitInPlayerRange()) then {
				u.moveToUnit(Ally,Strongest)
			} else {
				u.harvest()
			}
		} else {
			u.train(Worker,Up)
			u.attack(LessHealthy)
		}
	}
}
FIM
