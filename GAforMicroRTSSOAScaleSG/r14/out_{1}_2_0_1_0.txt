Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Attack;MostHealthy;S;C;Build;Barracks;Left;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Right;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Light;Down;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Light;Down;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Strongest;S;Empty;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Heavy;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Light;Right;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Build;Heavy;Up;S;C;Build;Light;Left;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;C;Build;Worker;Left;S;S_S;S;C;Attack;Weakest;S;C;MoveAway
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Build;Light;EnemyDir;S;C;Build;Ranged;Up;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;C;Attack;Closest;S;For_S;S;C;Harvest;S;C;Train;Base;Left
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest



for(Unit u){
	u.train(Worker,Left)
	for(Unit u){
		if(u.canAttack()) then {
			u.attack(Closest)
			for(Unit u){
				u.harvest()
			}
		}
	}
}
FIM
