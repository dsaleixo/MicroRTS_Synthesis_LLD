Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random;S;S_S;S;C;Idle;S;C;Train;Base;EnemyDir
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Light;EnemyDir;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Light;EnemyDir;S;C;Train;Worker;Right;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Right;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Right;S;C;Attack;Weakest



for(Unit u){
	for(Unit u){
		if(HaveQtdUnitsAttacking(3)) then {
			u.harvest()
		}
		u.train(Worker,Right)
	}
	u.attack(Weakest)
}
FIM
