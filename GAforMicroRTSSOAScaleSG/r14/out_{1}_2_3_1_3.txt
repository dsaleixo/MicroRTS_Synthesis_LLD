Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Barracks;Up;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Harvest;S;C;Train;Light;Up;S;For_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Build;Ranged;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;S;For_S;S;C;Idle;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Farthest



for(Unit u){
	if(u.HasUnitWithinDistanceFromOpponent(10)) then {
		for(Unit u){
			for(Unit u){
				for(Unit u){
					u.harvest()
					for(Unit u){
						u.idle()
					}
				}
				u.train(Worker,Up)
			}
		}
	} else {
		u.moveToUnit(Enemy,Farthest)
	}
}
FIM
