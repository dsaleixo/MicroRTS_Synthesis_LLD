Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Build;Worker;Up;S;S_S;S;C;Attack;MostHealthy;S;C;Build;Base;Down;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;50;S;C;Build;Barracks;Down;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Build;Base;Left;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Random;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Down;S;S_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Random;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Down;S;S_S;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Down;S;S_S;S;C;Harvest;S;C;Train;Worker;Right;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Worker;Right;S;C;Attack;Farthest



for(Unit u){
	for(Unit u){
		if(u.HasUnitWithinDistanceFromOpponent(4)) then {
			u.idle()
		} else {
			u.harvest()
			u.train(Worker,Right)
		}
		u.attack(Farthest)
	}
}
FIM
