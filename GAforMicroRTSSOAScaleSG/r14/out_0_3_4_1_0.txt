Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Idle;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Idle;S;S_S;S;For_S;S;C;MoveAway;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Random;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Random;S;C;Harvest;S;For_S;S;C;Harvest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;C;Idle
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up;S;For_S;S;S_S;S;C;Attack;Random;S;For_S;S;C;Train;Ranged;Right
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Heavy;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveAway;S;S_S;S;C;Harvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;Empty;S;S_S;S;C;Harvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;Empty;S;S_S;S;C;Harvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest



for(Unit u){
	u.train(Worker,Up)
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(1)) then {
			if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
				u.attack(Weakest)
			} else {
				e
			}
		} else {
			u.harvest()
			u.moveToUnit(Enemy,Closest)
		}
	}
}
FIM
