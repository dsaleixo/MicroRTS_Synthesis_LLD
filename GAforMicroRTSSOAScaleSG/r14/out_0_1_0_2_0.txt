Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;Train;Ranged;EnemyDir;S;C;Harvest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;C;Harvest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Light;Right;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Light;Right;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest



for(Unit u){
	u.build(Light,Right)
	if(HasNumberOfUnits(Worker,3)) then {
		for(Unit u){
			if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
				for(Unit u){
					u.idle()
				}
				u.moveAway()
			}
		}
	}
	u.train(Worker,Left)
	u.attack(Strongest)
}
FIM
