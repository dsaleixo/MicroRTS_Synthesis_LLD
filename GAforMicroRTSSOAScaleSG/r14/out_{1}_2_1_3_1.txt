Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;Attack;Strongest;S;C;MoveAway;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Worker;Left;S;C;Attack;Strongest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Attack;Random;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Harvest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Base;EnemyDir;S;C;Build;Light;Left;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Barracks;Left;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Closest;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Up;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Build;Base;Down;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException
FIM
