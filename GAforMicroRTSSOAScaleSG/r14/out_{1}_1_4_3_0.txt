Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;10;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;EnemyDir



for(Unit u){
	for(Unit u){
		u.idle()
		u.harvest()
		u.train(Worker,EnemyDir)
		u.moveToUnit(Enemy,Closest)
	}
}
FIM
