Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Heavy;EnemyDir;S;C;Build;Base;EnemyDir;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Attack;LessHealthy;S;C;MoveAway;S;C;Train;Worker;Left;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Ranged;Right;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Light;Down;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Light;Up;S;C;Attack;Weakest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;If_B_then_S;B;is_Type;Worker;S;C;Idle;S;S_S;S;C;Build;Light;Up;S;C;Attack;Weakest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;Weakest;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;Harvest



for(Unit u){
	if(HasNumberOfWorkersHarvesting(2)) then {
		u.attack(Weakest)
	} else {
		u.harvest()
	}
	u.train(Worker,Down)
}
FIM
