Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;S;C;Train;Barracks;Down
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Left;S;C;MoveAway
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Barracks;Up;S;C;Build;Ranged;EnemyDir;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Worker;EnemyDir;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Worker;EnemyDir;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy;S;C;MoveAway
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy;S;C;MoveAway



for(Unit u){
	for(Unit u){
		if(HaveQtdUnitsAttacking(2)) then {
			u.idle()
			u.harvest()
		}
	}
	u.train(Worker,EnemyDir)
	u.attack(LessHealthy)
	u.moveAway()
}
FIM
