Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;S;S_S;S;For_S;S;C;Train;Worker;Down;S;C;Attack;Weakest



for(Unit u){
	for(Unit u){
		u.idle()
	}
	if(HaveQtdUnitsAttacking(2)) then {
		u.harvest()
	}
	for(Unit u){
		u.train(Worker,Down)
	}
	u.attack(Weakest)
}
FIM
