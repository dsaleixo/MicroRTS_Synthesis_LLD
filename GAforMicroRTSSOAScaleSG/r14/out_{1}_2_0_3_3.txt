Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;S;C;Train;Light;EnemyDir
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;C;Harvest;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Random;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Random;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Harvest;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Build;Worker;Left;S;C;Attack;Closest;S;For_S;S;For_S;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;S;C;Attack;MostHealthy
Atual=S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Idle;S;For_S;S;C;Train;Ranged;Right;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest
Atual=S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Harvest;S;For_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;S;C;Harvest
Atual=S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;S;C;Train;Ranged;EnemyDir;S;C;Harvest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;S;C;Train;Heavy;Left;S;C;Harvest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Closest;S;C;Harvest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;S_S;S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Closest;S;For_S;S;For_S;S;Empty



for(Unit u){
	u.harvest()
	if(u.isBuilder()) then {
		for(Unit u){
			u.train(Worker,Right)
			u.attack(Closest)
		}
	}
}
FIM
