Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Heavy;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Light;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;1;S;For_S;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Build;Light;Down;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;1;S;For_S;S;For_S;S;C;Harvest;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;50;S;S_S;S;C;Harvest;S;C;Train;Base;EnemyDir;S;S_S;S;C;Build;Barracks;Up;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;S;C;Train;Light;Right;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;Attack;Weakest



for(Unit u){
	for(Unit u){
		u.idle()
		u.build(Barracks,Up)
		u.train(Light,EnemyDir)
		u.harvest()
	}
	u.attack(Weakest)
}
FIM
