Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Right;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;S;S_S;S;For_S;S;C;Harvest;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Build;Base;Right;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;S;For_S;S;C;Harvest



for(Unit u){
	for(Unit u){
		if(u.HasUnitWithinDistanceFromOpponent(10)) then {
			for(Unit u){
				for(Unit u){
					for(Unit u){
						u.idle()
					}
					for(Unit u){
						u.attack(LessHealthy)
					}
				}
			}
		}
	}
	u.train(Worker,Up)
	for(Unit u){
		u.harvest()
	}
}
FIM
