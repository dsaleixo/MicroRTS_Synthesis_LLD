Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;25;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;Build;Heavy;Left;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;0;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir



for(Unit u){
	u.idle()
	if(HasNumberOfWorkersHarvesting(2)) then {
		u.attack(LessHealthy)
	} else {
		u.harvest()
	}
	u.train(Worker,EnemyDir)
}
FIM
