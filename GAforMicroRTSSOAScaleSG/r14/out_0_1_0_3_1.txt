Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Down
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;50;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down



for(Unit u){
	u.harvest()
	if(u.canAttack()) then {
		for(Unit u){
			for(Unit u){
				if(HaveQtdUnitsAttacking(4)) then {
					u.harvest()
				}
			}
			u.attack(Weakest)
			for(Unit u){
				u.train(Worker,Down)
			}
		}
	}
}
FIM
