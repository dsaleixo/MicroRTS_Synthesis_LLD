Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Heavy;Up;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Ranged;Left;S;C;Attack;LessHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Light;Up;S;S_S;S;C;Build;Ranged;Left;S;C;Attack;LessHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;EnemyDir;S;C;Build;Worker;Right;S;S_S;S;C;Attack;Strongest;S;C;Attack;Random;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Right;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveAway;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Right;S;S_S;S;C;Harvest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Idle



for(Unit u){
	u.build(Worker,Right)
	u.harvest()
	if(u.canHarvest()) then {
		for(Unit u){
			u.attack(MostHealthy)
		}
	}
	for(Unit u){
		for(Unit u){
			u.train(Worker,Up)
			for(Unit u){
				u.idle()
			}
		}
	}
}
FIM
