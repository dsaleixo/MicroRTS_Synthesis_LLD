Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Closest;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Attack;Closest;S;Empty;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveAway;S;C;Train;Barracks;Up;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;0;S;C;Harvest;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Ranged;Right;S;For_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;Random;S;S_S;S;C;Idle;S;C;Build;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;S;S_S;S;For_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;C;Build;Barracks;Up;S;For_S;S;C;Build;Base;EnemyDir;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;0;S;C;Attack;Farthest;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Harvest;S;Empty
Atual=S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Ranged;Left;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;S;S_S;S;For_S;S;S_S;S;C;Harvest;S;For_S;S;C;Build;Barracks;Up;S;For_S;S;For_S;S;For_S;S;C;Attack;Strongest



for(Unit u){
	if(u.isBuilder()) then {
		if(u.HasUnitThatKillsInOneAttack()) then {
			u.moveToUnit(Ally,MostHealthy)
		} else {
			e
		}
	} else {
		for(Unit u){
			for(Unit u){
				u.train(Light,Down)
			}
			for(Unit u){
				u.harvest()
				for(Unit u){
					u.build(Barracks,Up)
				}
			}
			for(Unit u){
				for(Unit u){
					for(Unit u){
						u.attack(Strongest)
					}
				}
			}
		}
	}
}
FIM
