Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;IsBuilder;S;C;Attack;Weakest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Worker;EnemyDir;S;C;Idle;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;Idle;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;Random;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Harvest;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveAway;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Idle;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;2;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		for(Unit u){
			u.idle()
			if(HaveQtdUnitsAttacking(2)) then {
				u.harvest()
			}
			u.attack(Closest)
		}
	}
	u.train(Worker,Up)
}
FIM
