Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;2;S;C;Attack;LessHealthy;S;C;Build;Ranged;Left;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Barracks;Up;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Left;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Worker;Right
Atual=S;S_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Random;S;C;Harvest;S;If_B_then_S_else_S;B;IsBuilder;S;C;Train;Light;Down;S;C;Idle;S;For_S;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Attack;Strongest;S;C;Harvest;S;For_S;S;For_S;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(1)) then {
			u.attack(Strongest)
		} else {
			u.harvest()
		}
	}
}
for(Unit u){
	for(Unit u){
		u.train(Worker,Up)
	}
}
FIM
