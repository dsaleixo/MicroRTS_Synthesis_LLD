Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Farthest;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir



for(Unit u){
	u.harvest()
	if(u.canAttack()) then {
		for(Unit u){
			if(u.isBuilder()) then {
				u.attack(MostHealthy)
			}
		}
	} else {
		for(Unit u){
			u.idle()
		}
	}
	u.train(Worker,EnemyDir)
}
FIM
