Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Ranged;Up;S;C;Attack;Weakest;S;S_S;S;C;Idle;S;S_S;S;C;Train;Base;Down;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;S;C;Attack;Weakest;S;S_S;S;C;Idle;S;S_S;S;C;Train;Base;Down;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Train;Heavy;Right;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Base;Down;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Down;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Harvest;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;0;S;C;Train;Ranged;Left;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Base;Down;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		u.build(Worker,Down)
		if(u.canHarvest()) then {
			if(u.canHarvest()) then {
				u.harvest()
				for(Unit u){
					u.attack(Strongest)
				}
			}
		} else {
			for(Unit u){
				if(HaveQtdUnitsAttacking(0)) then {
					u.train(Ranged,Left)
				}
			}
		}
		u.train(Worker,Right)
		u.train(Base,Down)
		u.train(Worker,Up)
	}
}
FIM
