Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;Random;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;Random;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;Random;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;Random;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;Train;Heavy;Up;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Build;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Harvest;S;C;Build;Base;Up;S;For_S;S;C;Attack;Strongest;S;C;Attack;Strongest



for(Unit u){
	u.train(Worker,Down)
	for(Unit u){
		if(u.canHarvest()) then {
			u.harvest()
			for(Unit u){
				u.attack(Strongest)
			}
		}
	}
}
FIM
