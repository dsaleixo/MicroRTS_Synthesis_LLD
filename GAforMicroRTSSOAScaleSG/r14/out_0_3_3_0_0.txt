Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;0;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Harvest;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Train;Worker;Left;S;S_S;S;C;Build;Ranged;Up;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Build;Light;Down;S;S_S;S;C;Build;Ranged;Up;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Build;Ranged;Right;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Train;Worker;Left;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Build;Heavy;Left;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;C;Train;Light;Down;S;C;Harvest;S;For_S;S;C;Attack;Random;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Harvest;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Right



for(Unit u){
	if(u.canHarvest()) then {
		u.harvest()
		for(Unit u){
			u.attack(Strongest)
		}
	} else {
		for(Unit u){
			u.train(Worker,Right)
		}
	}
}
FIM
