Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;Empty;S;Empty;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Up;S;S_S;S;C;Train;Worker;Down;S;S_S;S;S_S;S;C;Train;Light;Up;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Build;Light;Left;S;S_S;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Light;Left;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Left;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Heavy;Down;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Light;Up;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Worker;Right;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Build;Worker;Right;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Build;Worker;Right;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Right;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;Random;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest



for(Unit u){
	u.train(Worker,Down)
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(4)) then {
			u.moveToUnit(Enemy,Closest)
		} else {
			u.harvest()
		}
	}
	if(u.HasUnitInOpponentRange()) then {
		u.idle()
	} else {
		u.harvest()
	}
}
FIM
