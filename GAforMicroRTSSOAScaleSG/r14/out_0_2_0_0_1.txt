Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Right;S;C;Build;Barracks;Right
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Build;Heavy;Left;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Build;Heavy;Left;S;S_S;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Build;Heavy;Left;S;S_S;S;C;Idle;S;C;Attack;Farthest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Attack;Closest;S;C;Build;Heavy;Left;S;S_S;S;C;Idle;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;LessHealthy;S;C;Train;Worker;Right



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		u.harvest()
	} else {
		u.attack(LessHealthy)
	}
	u.train(Worker,Right)
}
FIM
