Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;S;For_S;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;S;For_S;S;Empty;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest;S;C;Harvest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;4;S;C;MoveAway;S;C;Attack;Random;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;If_B_then_S;B;IsBuilder;S;C;Harvest;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Harvest;S;For_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;S;C;Train;Heavy;Up
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveAway;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Barracks;Down;S;C;Attack;Random;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;0;S;C;Attack;Strongest;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;C;Harvest



for(Unit u){
	for(Unit u){
		u.idle()
	}
	for(Unit u){
		if(u.HasUnitThatKillsInOneAttack()) then {
			u.train(Worker,Up)
		}
		u.harvest()
	}
}
FIM
