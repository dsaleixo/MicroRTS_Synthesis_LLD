Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;2;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Idle;S;C;Build;Ranged;Up;S;S_S;S;C;Train;Worker;Up;S;C;Idle
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;S_S;S;For_S;S;C;Train;Barracks;Down;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Base;Up;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;10;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Idle;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;2;S;C;Harvest;S;C;Attack;Closest;S;C;Attack;Closest;S;C;Train;Worker;Up



for(Unit u){
	if(u.HasUnitWithinDistanceFromOpponent(2)) then {
		u.idle()
	} else {
		e
	}
	u.harvest()
	u.attack(Closest)
	u.train(Worker,Up)
}
FIM
