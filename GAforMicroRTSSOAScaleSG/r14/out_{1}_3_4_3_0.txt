Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Right;S;C;Build;Heavy;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;Harvest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;S;S_S;S;C;Harvest;S;C;Build;Heavy;Up;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Build;Barracks;Down;S;S_S;S;C;Train;Worker;Right;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Build;Base;Right;S;S_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Build;Barracks;Down;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;Train;Worker;Right;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Down;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;S;C;Train;Worker;Down



for(Unit u){
	for(Unit u){
		for(Unit u){
			if(HasNumberOfWorkersHarvesting(2)) then {
				u.build(Barracks,Down)
				u.idle()
				u.attack(LessHealthy)
				u.train(Light,Down)
				u.moveToUnit(Ally,MostHealthy)
			} else {
				u.harvest()
			}
		}
	}
	u.train(Worker,Down)
}
FIM
