Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;Train;Worker;Left;S;C;Harvest;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;Empty;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;Empty;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;Empty;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;25;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down;S;For_S;S;C;Build;Heavy;Down
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Down;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest



for(Unit u){
	for(Unit u){
		u.attack(Strongest)
		if(u.canAttack()) then {
			for(Unit u){
				u.train(Worker,Down)
			}
		}
		for(Unit u){
			for(Unit u){
				u.idle()
			}
			for(Unit u){
				u.harvest()
			}
		}
	}
}
FIM
