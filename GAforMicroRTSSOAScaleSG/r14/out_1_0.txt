Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;3;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;Build;Base;EnemyDir;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;Build;Base;EnemyDir;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		if(HaveQtdUnitsAttacking(5)) then {
			u.build(Base,EnemyDir)
			u.moveToUnit(Enemy,Farthest)
		} else {
			for(Unit u){
				u.harvest()
			}
		}
	} else {
		u.attack(Closest)
		u.train(Worker,Up)
	}
}
FIM
