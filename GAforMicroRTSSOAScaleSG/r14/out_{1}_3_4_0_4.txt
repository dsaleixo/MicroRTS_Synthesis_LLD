Unloading StdEnv/2020
Atual=S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Attack;Farthest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Ranged;EnemyDir;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Barracks;Right;S;C;Harvest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;S;C;Train;Worker;Down



for(Unit u){
	for(Unit u){
		for(Unit u){
			for(Unit u){
				u.idle()
			}
			u.harvest()
			u.attack(Closest)
		}
		if(HasNumberOfWorkersHarvesting(50)) then {
			for(Unit u){
				u.moveToUnit(Enemy,Closest)
			}
		} else {
			u.train(Worker,Down)
		}
	}
}
FIM
