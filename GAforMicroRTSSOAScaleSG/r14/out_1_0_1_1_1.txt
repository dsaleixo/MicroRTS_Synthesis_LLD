Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Right;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Right;S;C;Harvest;S;C;MoveToUnit;Enemy;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Right;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Right;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Up;S;C;Harvest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Harvest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Base;EnemyDir;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Base;EnemyDir;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Base;EnemyDir;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;EnemyDir;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Base;Down;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Base;Down;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;S_S;S;C;Train;Base;Down;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;Weakest;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Harvest;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;3;S;C;Harvest;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Harvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;3;S;C;Harvest;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Attack;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;1;S;S_S;S;For_S;S;C;Harvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;3;S;C;Harvest;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;1;S;S_S;S;For_S;S;C;Harvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;3;S;C;Harvest;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Heavy;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;2;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Heavy;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Heavy;Left;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Train;Barracks;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Up;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Train;Barracks;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Up;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Build;Ranged;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Up;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Build;Ranged;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Build;Ranged;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Train;Light;Down;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Build;Ranged;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Ranged;Left
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Ranged;Left



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		for(Unit u){
			u.harvest()
		}
	} else {
		if(u.HasUnitWithinDistanceFromOpponent(10)) then {
			u.attack(LessHealthy)
		} else {
			u.train(Worker,Left)
			u.idle()
			u.attack(Strongest)
		}
		u.build(Ranged,Left)
	}
}
FIM
