Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Worker;EnemyDir;S;C;Train;Base;EnemyDir;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Weakest
Atual=S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Weakest



for(Unit u){
	u.moveToUnit(Enemy,Strongest)
	if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
		for(Unit u){
			u.idle()
			u.harvest()
		}
	} else {
		u.train(Worker,EnemyDir)
	}
	if(u.isBuilder()) then {
		for(Unit u){
			u.moveToUnit(Enemy,Weakest)
		}
	}
}
FIM
