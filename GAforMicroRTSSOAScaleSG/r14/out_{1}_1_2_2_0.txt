Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Build;Heavy;Up;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Heavy;Right;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Weakest
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Light;Up;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Weakest
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;MoveAway;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Closest
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Barracks;Left;S;C;Harvest;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Closest



for(Unit u){
	if(u.canAttack()) then {
		for(Unit u){
			for(Unit u){
				if(HasNumberOfWorkersHarvesting(4)) then {
					if(u.canHarvest()) then {
						u.attack(Closest)
						u.moveToUnit(Ally,Closest)
					} else {
						e
					}
				}
			}
		}
		u.harvest()
	} else {
		u.train(Worker,Down)
	}
}
FIM
