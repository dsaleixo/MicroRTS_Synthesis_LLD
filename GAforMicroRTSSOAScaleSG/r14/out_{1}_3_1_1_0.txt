Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;For_S;S;C;Harvest;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Left;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Build;Ranged;Left;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Train;Worker;Right



for(Unit u){
	if(HasNumberOfWorkersHarvesting(2)) then {
		for(Unit u){
			u.attack(LessHealthy)
		}
	} else {
		u.harvest()
	}
	u.train(Worker,Right)
}
FIM
