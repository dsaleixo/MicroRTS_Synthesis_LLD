Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Left
Atual=S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Right
Atual=S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down
Atual=S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;10;S;C;Idle;S;C;Train;Heavy;EnemyDir;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Worker;Up;S;C;Train;Heavy;EnemyDir;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;Harvest;S;C;MoveAway;S;S_S;S;C;Idle;S;C;Harvest
Atual=S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;C;Train;Worker;Up;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Build;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Closest
Atual=S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Train;Worker;Down;S;Empty



for(Unit u){
	if(u.isBuilder()) then {
		u.harvest()
		for(Unit u){
			u.attack(Strongest)
		}
	}
}
for(Unit u){
	if(u.canAttack()) then {
		for(Unit u){
			u.train(Worker,Down)
		}
	} else {
		e
	}
}
FIM
