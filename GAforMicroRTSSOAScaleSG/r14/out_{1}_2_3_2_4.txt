Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;25;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Random;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveAway;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Random;S;C;Train;Light;EnemyDir;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Base;Down;S;S_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Left;S;Empty;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Left;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Random;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Light;EnemyDir;S;C;Idle;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Down;S;C;Attack;Weakest



for(Unit u){
	u.idle()
	u.harvest()
	u.train(Worker,Down)
	u.attack(Weakest)
}
FIM
