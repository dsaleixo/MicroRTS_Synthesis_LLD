Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Build;Worker;Right;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;S;C;Build;Light;Up
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Down;S;Empty
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Train;Worker;Down;S;Empty
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Train;Worker;Right;S;Empty
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;0;S;For_S;S;C;Train;Worker;Right;S;Empty
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Harvest;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Worker;Up;S;C;Harvest



for(Unit u){
	u.attack(Weakest)
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(1)) then {
			u.train(Worker,Up)
		} else {
			u.harvest()
		}
	}
}
FIM
