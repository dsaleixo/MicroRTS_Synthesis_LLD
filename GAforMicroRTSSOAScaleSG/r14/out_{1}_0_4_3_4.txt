Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;Strongest
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Build;Heavy;Right;S;For_S;S;C;Attack;Strongest
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;Empty;S;C;Build;Heavy;Up;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;For_S;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;S;Empty;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;3;S;For_S;S;C;Harvest;S;Empty;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Closest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Closest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Closest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Idle;S;C;Attack;Strongest;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Random
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Strongest;S;C;MoveAway;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;MostHealthy
Atual=S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;LessHealthy;S;C;Harvest;S;C;Build;Heavy;Up;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Attack;LessHealthy;S;C;MoveAway;S;C;Harvest;S;For_S;S;C;Train;Worker;Left



for(Unit u){
	if(u.HasUnitWithinDistanceFromOpponent(4)) then {
		u.attack(LessHealthy)
	} else {
		u.harvest()
	}
}
for(Unit u){
	u.train(Worker,Left)
}
FIM
