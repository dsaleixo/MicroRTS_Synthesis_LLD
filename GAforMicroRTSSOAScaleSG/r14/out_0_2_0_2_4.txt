Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Idle;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Build;Heavy;Right;S;S_S;S;For_S;S;C;Build;Base;Up;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;3;S;C;Build;Heavy;Right;S;S_S;S;For_S;S;C;Build;Base;Up;S;C;Harvest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Build;Light;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;S;C;Train;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;S_S;S;C;Train;Worker;Up;S;C;Attack;LessHealthy



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		for(Unit u){
			u.harvest()
		}
	} else {
		u.train(Worker,Up)
		u.attack(LessHealthy)
	}
}
FIM
