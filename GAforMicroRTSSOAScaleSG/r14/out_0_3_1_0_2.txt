Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Train;Ranged;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Heavy;Up;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Light;Left;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Heavy;Up;S;C;Train;Worker;Down;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Light;Left;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Down;S;C;Attack;Closest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Base;Right;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;C;Build;Barracks;Down;S;S_S;S;C;Train;Heavy;Left;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;S;S_S;S;For_S;S;C;Build;Barracks;Down;S;C;Train;Heavy;Left;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;S;For_S;S;C;Build;Barracks;Left;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;S;For_S;S;C;Build;Barracks;Up;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;50;S;C;Train;Base;Right;S;C;Train;Worker;Down;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;C;Build;Heavy;Left;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;C;Build;Heavy;EnemyDir;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;C;Build;Light;EnemyDir;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Harvest;S;C;Build;Light;EnemyDir;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Random;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Build;Light;Right;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Random;S;C;Train;Heavy;Right;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Random;S;Empty;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Random;S;Empty;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;EnemyDir;S;C;Harvest;S;C;Attack;Weakest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;Empty



for(Unit u){
	u.train(Worker,Down)
	for(Unit u){
		if(u.canHarvest()) then {
			u.harvest()
			for(Unit u){
				u.attack(Strongest)
			}
		} else {
			e
		}
	}
}
FIM
