Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;50;S;C;Train;Ranged;Down;S;C;MoveAway;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Build;Heavy;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;Left;S;S_S;S;C;Harvest;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;Harvest;S;C;Attack;Strongest;S;C;Attack;Strongest



for(Unit u){
	for(Unit u){
		for(Unit u){
			for(Unit u){
				u.train(Worker,EnemyDir)
				if(HasNumberOfWorkersHarvesting(3)) then {
					e
				} else {
					u.harvest()
				}
			}
		}
	}
	u.attack(Strongest)
}
FIM
