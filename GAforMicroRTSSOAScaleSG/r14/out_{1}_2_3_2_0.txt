Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;S;For_S;S;C;Build;Barracks;Down;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Up;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;S;For_S;S;C;Build;Barracks;Down;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Base;EnemyDir;S;C;Idle;S;C;Attack;Random;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Harvest;S;C;Train;Heavy;Right;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Attack;Random;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;S;For_S;S;C;Build;Barracks;Down;S;S_S;S;S_S;S;C;Attack;Random;S;C;Train;Heavy;Right;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Idle
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Train;Barracks;Right;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Closest;S;C;Harvest;S;For_S;S;C;Train;Barracks;Down;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;S;Empty;S;C;Train;Worker;EnemyDir



for(Unit u){
	if(u.canHarvest()) then {
		if(HasNumberOfWorkersHarvesting(1)) then {
			u.attack(Strongest)
			u.moveToUnit(Enemy,MostHealthy)
		} else {
			u.harvest()
		}
	} else {
		e
	}
	u.train(Worker,EnemyDir)
}
FIM
