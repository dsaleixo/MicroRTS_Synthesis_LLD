Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Worker;Down;S;C;MoveAway;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Build;Ranged;Right;S;C;Train;Base;EnemyDir;S;For_S;S;C;Build;Heavy;Down
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy;S;For_S;S;Empty
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Heavy;Down;S;C;Train;Worker;Left;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Light;EnemyDir;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;If_B_then_S;B;HasNumberOfUnits;Heavy;25;S;For_S;S;C;MoveAway;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;Empty;S;C;Train;Worker;Left;S;C;Harvest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;For_S;S;C;Build;Base;Up;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;5;S;C;Harvest;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir



for(Unit u){
	for(Unit u){
		u.idle()
		u.harvest()
		u.attack(Weakest)
		u.train(Worker,EnemyDir)
	}
}
FIM
