Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Build;Base;EnemyDir;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;For_S;S;C;Harvest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest



for(Unit u){
	u.train(Worker,Up)
	for(Unit u){
		if(HaveQtdUnitsAttacking(3)) then {
			for(Unit u){
				for(Unit u){
					u.harvest()
				}
			}
		} else {
			u.attack(Closest)
		}
	}
	u.moveToUnit(Ally,Strongest)
}
FIM
