Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Random
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Random
Atual=S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Random;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Right;S;C;Harvest
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Ranged;Left;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Right
Atual=S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Ranged;Left;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Right



for(Unit u){
	if(u.canHarvest()) then {
		for(Unit u){
			if(u.canHarvest()) then {
				for(Unit u){
					for(Unit u){
						if(HasNumberOfWorkersHarvesting(3)) then {
							u.moveToUnit(Enemy,Weakest)
						} else {
							u.build(Ranged,Left)
						}
						u.idle()
						u.harvest()
					}
				}
			} else {
				u.train(Worker,Right)
			}
		}
	}
}
FIM
