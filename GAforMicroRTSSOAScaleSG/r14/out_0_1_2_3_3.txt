Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;For_S;S;C;Build;Worker;Up;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;S;For_S;S;C;Build;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;10;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Train;Ranged;EnemyDir;S;C;Harvest;S;C;Train;Worker;Right;S;C;Attack;Weakest



for(Unit u){
	for(Unit u){
		for(Unit u){
			for(Unit u){
				if(HasNumberOfWorkersHarvesting(1)) then {
					e
				} else {
					u.harvest()
				}
			}
			u.train(Worker,Right)
			u.attack(Weakest)
		}
	}
}
FIM
