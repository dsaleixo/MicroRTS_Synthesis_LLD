Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;4;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Build;Worker;EnemyDir;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Build;Worker;EnemyDir;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Down;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Build;Worker;EnemyDir;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Idle;S;C;Attack;Closest



for(Unit u){
	u.train(Worker,Right)
	if(HaveQtdUnitsAttacking(3)) then {
		u.harvest()
	} else {
		u.idle()
	}
	u.attack(Closest)
}
FIM
