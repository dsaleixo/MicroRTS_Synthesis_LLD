Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;C;Harvest;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;10;S;C;Train;Worker;Up;S;Empty;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Build;Barracks;Right;S;C;Harvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Random;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Weakest;S;C;Harvest



for(Unit u){
	u.train(Worker,Up)
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(3)) then {
			u.attack(Weakest)
		} else {
			u.harvest()
		}
	}
}
FIM
