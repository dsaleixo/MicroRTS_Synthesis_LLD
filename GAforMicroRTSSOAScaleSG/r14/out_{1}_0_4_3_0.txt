Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;10;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Harvest;S;C;Harvest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest



for(Unit u){
	u.train(Worker,Left)
	u.attack(Strongest)
	if(u.OpponentHasUnitInPlayerRange()) then {
		e
	} else {
		if(HasNumberOfUnits(Worker,10)) then {
			e
		} else {
			for(Unit u){
				if(HaveQtdUnitsAttacking(2)) then {
					u.harvest()
				}
			}
		}
	}
}
FIM
