Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;0;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Harvest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;S;C;Train;Worker;Up;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest
Atual=S;For_S;S;For_S;S;S_S;S;C;Harvest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Up;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest



for(Unit u){
	for(Unit u){
		u.harvest()
		if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
			for(Unit u){
				u.attack(Closest)
			}
		}
		u.train(Worker,Up)
		u.moveToUnit(Enemy,Farthest)
	}
}
FIM
