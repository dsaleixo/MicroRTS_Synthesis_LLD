Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;S;C;Harvest
Atual=S;For_S;S;S_S;S;C;Build;Barracks;Down;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Light;Right;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;Down;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Right;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Build;Barracks;Down;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Right;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;EnemyDir;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Left;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Left;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Left;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Strongest;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Left;S;C;Idle;S;C;Attack;Strongest;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;C;Harvest;S;S_S;S;C;Train;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Build;Heavy;EnemyDir;S;C;Harvest;S;S_S;S;C;Train;Worker;EnemyDir;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;2;S;C;Train;Heavy;Down;S;C;Attack;LessHealthy



for(Unit u){
	if(HasNumberOfWorkersHarvesting(1)) then {
		u.build(Heavy,EnemyDir)
	} else {
		u.harvest()
	}
	u.train(Worker,EnemyDir)
	u.attack(LessHealthy)
}
FIM
