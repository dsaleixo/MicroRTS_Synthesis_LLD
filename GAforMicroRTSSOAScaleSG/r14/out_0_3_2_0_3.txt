Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Barracks;Up;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Right;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;C;Harvest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left



for(Unit u){
	for(Unit u){
		u.idle()
	}
	if(HaveQtdUnitsAttacking(2)) then {
		for(Unit u){
			u.harvest()
		}
	}
	u.attack(Weakest)
	u.train(Worker,Left)
}
FIM
