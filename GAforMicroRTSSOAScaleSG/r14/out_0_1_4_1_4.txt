Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Closest;S;For_S;S;C;Build;Heavy;Down;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;For_S;S;C;Build;Ranged;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Build;Barracks;Up;S;C;Idle;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Build;Barracks;Down;S;C;Build;Heavy;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;S;C;Idle;S;C;Build;Barracks;EnemyDir;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Light;Left;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;S;C;Train;Ranged;Up;S;C;Build;Barracks;EnemyDir;S;S_S;S;C;Harvest;S;C;Attack;LessHealthy



for(Unit u){
	u.train(Light,Up)
	u.build(Barracks,EnemyDir)
	u.harvest()
	u.attack(LessHealthy)
}
FIM
