Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Build;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Build;Worker;Down;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;S;C;Build;Worker;Down;S;C;Harvest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;C;Idle;S;C;Build;Ranged;EnemyDir;S;S_S;S;C;Harvest;S;C;Harvest;S;C;Build;Worker;Down;S;C;MoveAway
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Random;S;C;Attack;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Harvest;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;S_S;S;C;Train;Base;EnemyDir;S;C;Harvest;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;S_S;S;For_S;S;C;Attack;Random;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Heavy;Down;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;C;Harvest
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Build;Base;Left;S;C;Harvest



for(Unit u){
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(4)) then {
			for(Unit u){
				for(Unit u){
					u.attack(Closest)
				}
			}
		} else {
			u.train(Worker,EnemyDir)
		}
	}
	if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
		u.idle()
	}
	for(Unit u){
		u.build(Base,Left)
	}
	u.harvest()
}
FIM
