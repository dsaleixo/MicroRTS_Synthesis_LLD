Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Weakest;S;C;Attack;Strongest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Random;S;C;Harvest;S;S_S;S;S_S;S;C;Build;Light;Up;S;C;Attack;MostHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Closest;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;C;Build;Base;Up;S;C;Attack;Closest;S;S_S;S;C;Train;Barracks;EnemyDir;S;C;Attack;MostHealthy;S;C;Harvest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Idle;S;S_S;S;C;Harvest;S;C;Train;Ranged;Right;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S;B;HaveQtdUnitsAttacking;0;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Closest;S;C;Train;Worker;Down



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		u.harvest()
	} else {
		u.attack(Closest)
	}
	u.train(Worker,Down)
}
FIM
