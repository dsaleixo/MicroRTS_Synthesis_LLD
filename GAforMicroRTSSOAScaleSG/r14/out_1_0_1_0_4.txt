Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Ranged;Down
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;S;C;Train;Worker;Down;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Attack;LessHealthy



for(Unit u){
	if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
		u.harvest()
	} else {
		u.train(Worker,Down)
	}
	if(HasNumberOfWorkersHarvesting(2)) then {
		for(Unit u){
			u.attack(LessHealthy)
		}
	}
}
FIM
