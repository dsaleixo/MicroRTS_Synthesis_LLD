Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;For_S;S;For_S;S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;For_S;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;For_S;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Heavy;Up;S;For_S;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Heavy;Up;S;For_S;S;S_S;S;C;Build;Heavy;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Light;Left;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;S;C;Harvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;C;Harvest;S;Empty;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;Empty;S;Empty;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Harvest;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Build;Barracks;Down



for(Unit u){
	if(HasNumberOfWorkersHarvesting(3)) then {
		u.attack(LessHealthy)
	} else {
		for(Unit u){
			u.train(Worker,EnemyDir)
		}
		u.harvest()
	}
}
for(Unit u){
	u.attack(Closest)
	u.moveToUnit(Ally,MostHealthy)
}
FIM
