Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;C;MoveAway;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HaveQtdUnitsAttacking;0;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;10;S;C;Attack;LessHealthy;S;C;Harvest;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir



for(Unit u){
	if(u.canHarvest()) then {
		if(HaveQtdUnitsAttacking(0)) then {
			if(HaveQtdUnitsAttacking(10)) then {
				u.attack(LessHealthy)
			} else {
				u.harvest()
			}
			for(Unit u){
				u.attack(Weakest)
			}
			u.attack(LessHealthy)
		}
	} else {
		for(Unit u){
			u.train(Worker,EnemyDir)
		}
	}
}
FIM
