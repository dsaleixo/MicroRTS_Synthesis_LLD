Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Random;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Weakest
Atual=S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right
Atual=S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Left;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;C;Harvest;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Strongest;S;C;Attack;Farthest;S;C;MoveAway;S;For_S;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		u.harvest()
		if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
			for(Unit u){
				u.attack(Strongest)
			}
		}
	}
}
for(Unit u){
	u.train(Worker,Up)
}
FIM
