Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Down;S;C;Train;Base;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;S_S;S;For_S;S;C;Build;Heavy;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;S_S;S;For_S;S;C;Build;Light;EnemyDir;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;S_S;S;C;Harvest;S;C;MoveAway;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;S_S;S;For_S;S;C;Build;Light;EnemyDir;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Harvest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;For_S;S;C;Build;Light;EnemyDir;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;C;Harvest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;For_S;S;C;Harvest;S;S_S;S;C;Harvest;S;C;Harvest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;S;C;MoveToUnit;Ally;MostHealthy



for(Unit u){
	if(u.HasUnitWithinDistanceFromOpponent(5)) then {
		u.idle()
	}
	if(HaveQtdUnitsAttacking(2)) then {
		for(Unit u){
			u.harvest()
		}
	} else {
		u.attack(LessHealthy)
		u.train(Worker,Down)
	}
	u.moveToUnit(Ally,MostHealthy)
}
FIM
