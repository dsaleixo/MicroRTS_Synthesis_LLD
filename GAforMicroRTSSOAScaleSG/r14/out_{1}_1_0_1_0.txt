Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;S;C;Build;Heavy;Up;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Light;Left;S;C;Build;Barracks;EnemyDir;S;C;Train;Worker;Left;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Build;Light;Left;S;S_S;S;C;Build;Light;EnemyDir;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;S;C;Train;Barracks;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Build;Ranged;Right;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;Empty;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;S_S;S;C;Train;Worker;Up;S;C;MoveAway;S;C;Train;Worker;Up



for(Unit u){
	if(u.HasUnitInOpponentRange()) then {
		e
	} else {
		for(Unit u){
			for(Unit u){
				for(Unit u){
					if(HasNumberOfWorkersHarvesting(5)) then {
						u.attack(Weakest)
					}
				}
			}
			u.harvest()
			u.train(Worker,Up)
		}
	}
}
FIM
