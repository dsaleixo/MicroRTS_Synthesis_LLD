Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;C;Idle;S;C;Attack;LessHealthy
Atual=S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Closest;S;C;Build;Barracks;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Build;Heavy;Down;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Build;Base;EnemyDir;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Closest
Atual=S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;C;Harvest;S;C;Attack;Farthest;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Closest



for(Unit u){
	if(HaveQtdUnitsAttacking(2)) then {
		u.harvest()
	} else {
		u.train(Worker,Up)
		u.attack(Closest)
	}
}
FIM
