Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;S_S;S;C;Build;Base;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Random
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Train;Worker;Up;S;C;Build;Ranged;EnemyDir;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Harvest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;S;C;Train;Ranged;Right;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Worker;Left;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Worker;Left;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Worker;Down;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Worker;Left;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Worker;Left;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Build;Worker;Left;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Attack;Random;S;C;Idle;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;Train;Heavy;Right;S;C;Harvest;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Train;Worker;Right;S;C;Attack;Farthest;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Train;Worker;Right;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Train;Worker;Right;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;MoveAway
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Train;Barracks;Up;S;C;Harvest;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir



for(Unit u){
	for(Unit u){
		for(Unit u){
			if(HaveQtdUnitsAttacking(3)) then {
				if(u.HasUnitInOpponentRange()) then {
					e
				} else {
					u.harvest()
				}
			} else {
				u.attack(LessHealthy)
			}
		}
		for(Unit u){
			for(Unit u){
				u.train(Worker,EnemyDir)
			}
		}
	}
}
FIM
