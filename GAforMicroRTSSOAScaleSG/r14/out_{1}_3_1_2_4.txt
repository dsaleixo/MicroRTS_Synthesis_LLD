Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Up
Atual=S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;C;Build;Worker;Down;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;0;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Harvest;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;S_S;S;C;Harvest;S;C;Harvest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Random;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;MostHealthy;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Farthest;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;S_S;S;C;Idle;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;S_S;S;C;Build;Base;Down;S;For_S;S;C;Attack;Weakest;S;C;Harvest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Weakest;S;C;Harvest;S;C;Train;Worker;Up



for(Unit u){
	u.idle()
	if(HasNumberOfWorkersHarvesting(4)) then {
		u.attack(Weakest)
	} else {
		u.harvest()
	}
	u.train(Worker,Up)
}
FIM
