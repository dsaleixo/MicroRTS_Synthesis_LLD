Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Build;Light;Down;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;C;Harvest
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;For_S;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;For_S;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Idle



for(Unit u){
	for(Unit u){
		u.harvest()
		if(u.OpponentHasUnitInPlayerRange()) then {
			u.moveToUnit(Enemy,Closest)
		} else {
			e
		}
		if(u.canHarvest()) then {
			for(Unit u){
				for(Unit u){
					u.attack(MostHealthy)
				}
			}
		}
		u.train(Worker,EnemyDir)
		for(Unit u){
			u.idle()
		}
	}
}
FIM
