Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Right;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;S;C;Train;Barracks;Up;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Build;Base;Right;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;For_S;S;C;Harvest;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;For_S;S;C;Attack;Closest;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Harvest;S;C;MoveAway;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir



for(Unit u){
	for(Unit u){
		if(u.isBuilder()) then {
			if(HaveQtdUnitsAttacking(1)) then {
				for(Unit u){
					if(u.canHarvest()) then {
						u.harvest()
					} else {
						for(Unit u){
							u.idle()
						}
					}
				}
			} else {
				u.attack(Weakest)
			}
		}
	}
	u.train(Worker,EnemyDir)
}
FIM
