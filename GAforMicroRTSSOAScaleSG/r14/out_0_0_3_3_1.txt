Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Worker;Down;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Worker;Down;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;10;S;C;Idle;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up;S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;C;Train;Heavy;Left;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Worker;Down;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveAway;S;C;Harvest
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Worker;Down;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Harvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Harvest;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		u.harvest()
		if(u.canHarvest()) then {
			for(Unit u){
				for(Unit u){
					u.attack(Weakest)
					u.train(Worker,Up)
				}
			}
		}
	}
}
FIM
