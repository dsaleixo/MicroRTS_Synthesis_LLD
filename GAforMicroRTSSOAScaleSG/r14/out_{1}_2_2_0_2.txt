Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;Strongest
Atual=S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;4;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy
Atual=S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;1;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy
Atual=S;S_S;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;S_S;S;S_S;S;C;Build;Worker;Right;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;C;MoveAway
Atual=S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;EnemyDir;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;Attack;Farthest;S;C;Attack;Weakest
Atual=S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;4;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;S;C;Idle;S;C;Train;Worker;Left;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;50;S;C;Harvest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Right
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;1;S;For_S;S;C;Harvest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Train;Worker;Down;S;C;Train;Heavy;Left
Atual=S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;Empty
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;S_S;S;C;Train;Light;Up;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;25;S;For_S;S;C;Attack;LessHealthy



for(Unit u){
	u.train(Worker,Up)
	for(Unit u){
		for(Unit u){
			if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
				u.idle()
				u.harvest()
				u.attack(Strongest)
			} else {
				e
			}
		}
	}
}
FIM
