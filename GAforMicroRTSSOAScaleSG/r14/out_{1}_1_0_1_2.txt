Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Build;Ranged;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Build;Ranged;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Build;Light;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;S;For_S;S;C;Build;Light;Down
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;S;For_S;S;C;Build;Light;Down
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;S;For_S;S;C;Build;Heavy;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;S_S;S;C;Harvest;S;C;Harvest;S;C;Build;Heavy;Up
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Train;Light;Up



for(Unit u){
	for(Unit u){
		u.attack(Strongest)
		u.train(Worker,Right)
		for(Unit u){
			if(HaveQtdUnitsAttacking(3)) then {
				u.harvest()
			}
		}
	}
}
FIM
