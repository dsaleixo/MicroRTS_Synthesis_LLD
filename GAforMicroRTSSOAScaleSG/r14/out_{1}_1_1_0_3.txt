Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Heavy;Right;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Build;Worker;Up;S;For_S;S;C;Train;Worker;Down;S;For_S;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;1;S;S_S;S;C;Attack;Strongest;S;C;Idle;S;S_S;S;C;Idle;S;C;Build;Base;EnemyDir;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;C;Attack;Random;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;S_S;S;C;Attack;Random;S;C;Build;Barracks;Left
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;S;C;Train;Worker;Up;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Harvest;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Train;Worker;Up;S;For_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;C;Build;Base;Left;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Train;Ranged;Up
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;C;Harvest;S;C;MoveAway;S;S_S;S;C;Harvest;S;C;Idle;S;C;Train;Worker;Up;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;Empty
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Harvest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;Empty
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;S;C;Harvest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;Empty



for(Unit u){
	u.train(Worker,Up)
	u.harvest()
	for(Unit u){
		for(Unit u){
			if(HasNumberOfWorkersHarvesting(4)) then {
				u.moveToUnit(Enemy,LessHealthy)
				u.idle()
			} else {
				e
			}
		}
	}
}
FIM
