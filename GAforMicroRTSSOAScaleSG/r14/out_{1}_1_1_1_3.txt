Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Attack;LessHealthy;S;C;Attack;LessHealthy;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Build;Light;Down;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;EnemyDir;S;C;Attack;Strongest;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Build;Barracks;Up;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;For_S;S;For_S;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Random;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Worker;EnemyDir
Atual=S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;S;C;Attack;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveAway;S;C;Train;Worker;EnemyDir



for(Unit u){
	if(HaveQtdUnitsAttacking(3)) then {
		u.harvest()
	} else {
		u.attack(Weakest)
	}
}
for(Unit u){
	for(Unit u){
		if(u.HasUnitWithinDistanceFromOpponent(3)) then {
			e
		} else {
			u.train(Worker,EnemyDir)
		}
	}
}
FIM
