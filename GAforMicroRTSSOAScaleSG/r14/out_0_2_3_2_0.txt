Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;MostHealthy
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right
Atual=S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Barracks;Down;S;S_S;S;C;Train;Worker;Up;S;C;MoveAway;S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Harvest;S;C;MoveAway
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;C;Build;Heavy;Left
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;EnemyDir
Atual=S;For_S;S;For_S;S;S_S;S;C;Build;Heavy;EnemyDir;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;Empty;S;C;Train;Worker;Down
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Light;Left;S;S_S;S;C;Build;Worker;Left;S;C;Idle;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Harvest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Train;Light;EnemyDir;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Base;Right;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;For_S;S;For_S;S;C;Train;Worker;Up;S;C;MoveToUnit;Enemy;Closest



for(Unit u){
	for(Unit u){
		for(Unit u){
			for(Unit u){
				for(Unit u){
					u.attack(LessHealthy)
				}
			}
		}
		if(u.HasUnitWithinDistanceFromOpponent(25)) then {
			for(Unit u){
				for(Unit u){
					for(Unit u){
						u.train(Worker,Up)
					}
				}
			}
		} else {
			u.moveToUnit(Enemy,Closest)
		}
	}
}
FIM
