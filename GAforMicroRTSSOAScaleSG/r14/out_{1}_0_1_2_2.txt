Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Base;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;For_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;Harvest;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Random;S;S_S;S;S_S;S;C;Harvest;S;C;Harvest;S;C;Attack;Farthest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;For_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;10;S;S_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Random



for(Unit u){
	u.train(Worker,Right)
	for(Unit u){
		for(Unit u){
			u.idle()
			if(HasLessNumberOfUnits(Worker,10)) then {
				u.harvest()
				u.moveToUnit(Enemy,Weakest)
			}
		}
	}
	for(Unit u){
		for(Unit u){
			if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {
				u.attack(Weakest)
			} else {
				u.moveToUnit(Enemy,Random)
			}
		}
	}
}
FIM
