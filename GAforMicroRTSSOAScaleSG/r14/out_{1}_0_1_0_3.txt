Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Farthest
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;C;Attack;Random
Atual=S;For_S;S;C;Attack;LessHealthy
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;S_S;S;C;Build;Light;EnemyDir;S;C;MoveToUnit;Ally;Farthest
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Idle
Atual=S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;S;C;MoveToUnit;Enemy;Closest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Harvest;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;S;C;Build;Heavy;Down;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;C;Idle;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;S;S_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Harvest;S;C;Attack;Strongest



for(Unit u){
	for(Unit u){
		for(Unit u){
			u.train(Worker,Right)
			if(u.canAttack()) then {
				if(HaveQtdUnitsAttacking(3)) then {
					for(Unit u){
						u.harvest()
					}
				}
			}
			u.attack(Strongest)
		}
	}
}
FIM
