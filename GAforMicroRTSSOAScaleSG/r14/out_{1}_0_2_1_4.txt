Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;S_S;S;C;Train;Worker;EnemyDir;S;C;Attack;Closest;S;C;MoveAway
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;Down;S;For_S;S;C;Idle
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;S;S_S;S;C;Attack;Strongest;S;C;Harvest;S;S_S;S;For_S;S;C;Train;Worker;Down;S;For_S;S;C;Idle



for(Unit u){
	for(Unit u){
		if(u.isBuilder()) then {
			for(Unit u){
				u.attack(Farthest)
				if(HaveQtdUnitsAttacking(4)) then {
					for(Unit u){
						for(Unit u){
							u.harvest()
						}
					}
				}
			}
		}
		for(Unit u){
			u.train(Worker,Down)
		}
		for(Unit u){
			u.idle()
		}
	}
}
FIM
