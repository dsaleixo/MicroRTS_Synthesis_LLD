Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;25;S;C;Build;Worker;Left
Atual=S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;S;For_S;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;10;S;C;Attack;Strongest;S;C;Build;Worker;Down
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Train;Barracks;Left;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;S_S;S;C;Idle;S;C;Harvest;S;Empty;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Right;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;Closest
Atual=S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;S;C;Harvest;S;C;Attack;Closest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;S_S;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Worker;EnemyDir
Atual=S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;S_S;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Idle;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;CanAttack;S;Empty
Atual=S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;5;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;S;C;Harvest;S;C;Idle;S;C;Attack;Closest;S;Empty;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Random;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;For_S;S;S_S;S;Empty;S;Empty;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Random
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;Empty;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest
Atual=S;For_S;S;For_S;S;S_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;S;C;Harvest;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Right;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Right;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy
Atual=S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up
Atual=S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Attack;Weakest;S;C;Harvest;S;C;Train;Worker;Up



for(Unit u){
	for(Unit u){
		if(HasNumberOfWorkersHarvesting(1)) then {
			u.attack(Weakest)
		} else {
			u.harvest()
		}
		u.train(Worker,Up)
	}
}
FIM
