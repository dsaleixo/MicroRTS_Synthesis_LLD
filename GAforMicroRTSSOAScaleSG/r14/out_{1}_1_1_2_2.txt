Unloading StdEnv/2020
Atual=S;For_S;S;C;Attack;Strongest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Right;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Up;S;C;Attack;Weakest
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Random
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Worker;Right;S;C;MoveToUnit;Ally;MostHealthy
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;S_S;S;C;Train;Heavy;EnemyDir;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Random;S;C;Train;Worker;Up
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;MostHealthy
Atual=S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;LessHealthy
Atual=S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;S;C;MoveToUnit;Enemy;LessHealthy



for(Unit u){
	for(Unit u){
		if(u.OpponentHasUnitInPlayerRange()) then {
			u.attack(LessHealthy)
		} else {
			u.moveToUnit(Ally,LessHealthy)
		}
	}
	for(Unit u){
		for(Unit u){
			u.train(Worker,Left)
			u.moveToUnit(Enemy,LessHealthy)
		}
	}
}
FIM
